<?php

/**
 * Implementation of hook_form_[form_id]_alter().
 * Add per field settings.
 */
function soundcloud_playlist_form_content_field_edit_form_alter(&$form, &$form_state) {
    if (in_array($form['widget_module']['#value'], soundcloud_api_allowed_fields())) {
        $field_name = $form['field_name']['#value'];
        $form['soundcloud_upload']['playlist'] = array(
          '#type' => 'select',
          '#title' => t('Add to Playlist'),
          '#description' => t('Automatically add uploaded content to selected Soundcloud playlist.'),
          '#options' => soundcloud_playlist_get_playlist(),
          '#default_value' => variable_get('soundcloud_playlist_' . $field_name, 0),
          '#weight' => 10,
        );
      
      $form['submit']['#weight']=10;
      $form['#submit'][]='soundcloud_playlist_form_field_submit';
    }
}

/* Save per field settings */
function soundcloud_playlist_form_field_submit(&$form, &$form_state) {
    $field_name = $form['field_name']['#value'];
    variable_set('soundcloud_playlist_' . $field_name, $form_state['values']['playlist']);
}

function soundcloud_playlist_get_playlist() {
 $playlist_list[0] = '-none-';
 try{
    $soundcloud = soundcloud_api_get_object();
    $playlists = json_decode($soundcloud->get('me/playlists'), true);

    foreach ($playlists as $playlist) {
      $playlist_list[$playlist['id']] = $playlist['title'];
    }
  }
  catch (Exception $e) {
    watchdog('soundcloud_playlist', "Playlists couldn\'t be retrieved from Soundcloud. Error response returned: ". $e->getMessage());
    drupal_set_message(t('Playlists couldn\'t be retrieved from Soundcloud. Please contact the site administrator.'), 'error');
  }
  
  return $playlist_list;
}

/**
 * Implementation of hook_block()
 */
function soundcloud_playlist_block($op = 'list', $delta = 0, $edit = array()) {
  // listing of blocks, such as on the admin/block page
  if ($op == "list") {
    $playlists = soundcloud_playlist_get_playlist();
    unset($playlists[0]);
    foreach ($playlists as $id=>$playlist) {
      $blocks[$id]['info'] = t('Soundcloud Playlist ').$playlist;
    }
    return $blocks;
  }
  elseif ($op == 'view') {
    $block = array(
      'content' => theme('soundcloud_api_embeded_player', $delta, 'playlists'),
    );
 
    return $block;
  }
}

function soundcloud_playlist_add_to($track_id, $playlist_id) {
  try {
    $soundcloud = soundcloud_api_get_object();
    $playlists = json_decode($soundcloud->get('playlists/'.$playlist_id), true);
   /* foreach ($playlists['tracks'] as $track) {
      
    }*/
    $playlist = array(
     'playlist[tracks[][id]]' => $track_id,
    );
    $response = $soundcloud->put('playlists/'.$playlist_id, $playlist);
    $response = json_decode($response);
  } 
  catch (Exception $e) {
    watchdog('soundcloud_playlist', "Error when adding a track=$track_id to playlist=$playlist_id . Error response returned: ". $e->getMessage());
    //drupal_set_message(t('Audio couldn\'t be uploaded to Soundcloud. Please contact the site administrator.'), 'error');
  }
}

/**
 * Implementation of hook_soundcloud_onupload()
*/
function soundcloud_playlist_soundcloud_onupload($fname, $track_id) {
  $playlist = variable_get('soundcloud_playlist_' . $fname, 0); 
  if ($playlist) {
    soundcloud_playlist_add_to($track_id, $playlist);
  }
}