<?php 

/**
 * Implementation of hook_menu().
 */
function voipphone_menu() {

  $items['admin/settings/phone'] = array(
    'title' => 'VoIP Phone configuration',
    'description' => 'Configure VoIP Phone.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('voipphone_admin_default_form', NULL),
    'access arguments' => array('administer voip drupal framework'),
  );
  
  return $items;
}

/**
 * Implementation of hook_theme().
 */
function voipphone_theme() {
  return array(
    'voipphone_formatter_nodialpad' => array(
      'arguments' => array('element' => NULL),
    ),
    'voipphone_formatter_withdialpad' => array(
      'arguments' => array('element' => NULL),
    ),
    'voipphone_admin_default_form' => array(
      'arguments' => array('form' => NULL),
    ),
  );
}

/**
 * Implementation of hook_field_formatter_info().
 */
function voipphone_field_formatter_info() {
  return array(
    'nodialpad' => array(
      'label' => t('VoIP Phone without dialpad'),
      'field types' => array('ca_phone', 'int_phone', 'voipnumber'),
      'multiple values' => CONTENT_HANDLE_CORE,
      'description' => t('Displays phone button.'),
    ),
    'withdialpad' => array(
      'label' => t('VoIP Phone with dialpad'),
      'field types' => array('ca_phone', 'int_phone', 'voipnumber'),
      'multiple values' => CONTENT_HANDLE_CORE,
      'description' => t('Displays phone button with dialpad.'),
    ),
  );
}

function voipphone_admin_default_form() {
  $clients = module_invoke_all('voipphone_clients');
  
  foreach($clients as $id=>$client) {
    $options[$id] = '';
    $form[$id]['id'] = array('#value' => $id);
    $form[$id]['configure'] = array('#value' => l(t('configure'), $client['config']));
    $form[$id]['name'] = array('#value' => $client['name']);
    $form['default'] = array('#type' => 'radios', '#options' => $options, '#default_value' => variable_get('voipphone_default_client', ''));
  }
  
  $form['voipphone_block_number'] = array(
    '#title' => t('Number of blocks'),
    '#type' => 'textfield',
    '#description' => t('The desired number of VoIP Phone blocks to be made available in the system. Enter a number between 0 and 99. If you set this to 0, you will get no VoIP Phone blocks.'),
    '#default_value' => variable_get('voipphone_block_number', '2'),
    '#size' => 2,
  );
  $form['submit'] = array(
    '#type' => 'submit', 
    '#value' => t('Save'),
  );
  
  return $form;
}

function voipphone_admin_default_form_submit($form, &$form_state) {
  // Process form submission to set the default voip server
  if ($form_state['values']['default']) {
    drupal_set_message(t('Default VoIP Client updated.'));
    variable_set('voipphone_default_client', $form_state['values']['default']);
    variable_set('voipphone_block_number', $form_state['values']['voipphone_block_number']);
  }
}


function theme_voipphone_admin_default_form($form) {
  $rows = array();
  foreach ($form as $name => $element) {
    if (isset($element['id']) && is_array($element['id'])) {
      $rows[] = array(
        drupal_render($form['default'][$element['id']['#value']]),
        check_plain($element['name']['#value']),
        drupal_render($element['configure']),
      );
      unset($form[$name]);
    }
  }
  $header = array(t('Default'), t('Name'), array('data' => t('Operations'), 'colspan' => 1));
  $output .= theme('table', $header, $rows);
  $output .= drupal_render($form);

  return $output;
}

function theme_voipphone_formatter_nodialpad($element) {
  $skin = 0;
  $id = $element['#field_name'].'-'.$element['#delta'];
  if(isset($element['#item']['phone'])) {
    $dial_number = $element['#item']['phone'];
  }
  else {
    $dial_number = $element['#item']['value'];
  } 
  if ($dial_number) {
    $clients = module_invoke_all('voipphone_clients');
    $client = $clients[variable_get('voipphone_default_client', '')];
    return call_user_func($client['callback'], $skin, $id, $dial_number);
  }
}

function theme_voipphone_formatter_withdialpad($element) {
  $skin = 1;
  $id = $element['#field_name'].'-'.$element['#delta'];
  if(isset($element['#item']['phone'])) {
    $dial_number = $element['#item']['phone'];
  }
  else {
    $dial_number = $element['#item']['value'];
  }
  if ($dial_number) {
    $clients = module_invoke_all('voipphone_clients');
    $client = $clients[variable_get('voipphone_default_client', '')];
    return call_user_func($client['callback'], $skin, $id, $dial_number);
  }
}

/**
 * Implementation of hook_block()
 */
function voipphone_block($op = 'list', $delta = 0, $edit = array()) {
  if ($op == 'configure') {   
    $form['voiphone_block_number'] = array(
      '#type' => 'textfield',
      '#title' => t('Number to call'),
      '#default_value' => variable_get('voiphone_block_number_' . $delta, variable_get('voipcall_cid_number','')),
      '#description' => t('If left empty then the default caller id set in Voip Drupal will be used.'),
    );
    
    $form['voiphone_block_text'] = array(
      '#type' => 'textfield',
      '#title' => t('Button text'),
      '#description' => t('Text that appears on VoIP Phone widget.'),
      '#default_value' => variable_get('voiphone_block_text_' . $delta, ''),
    );
    
    $form['voiphone_block_skin'] = array(
      '#type' => 'select',
      '#title' => t('VoIP Phone Skin'),
      '#default_value' => variable_get('voiphone_block_skin_' . $delta, 0),
      '#options' => array('without dialpad', 'with dialpad'),
      '#required' => TRUE,
    );
    return $form;
  }
  elseif ($op == 'save') {
    variable_set('voiphone_block_number_' . $delta, $edit['voiphone_block_number']);
    variable_set('voiphone_block_text_' . $delta, $edit['voiphone_block_text']);
    variable_set('voiphone_block_skin_' . $delta, $edit['voiphone_block_skin']);
  }
  elseif ($op == "list") {
    // listing of blocks, such as on the admin/block page
    for ($i = 1; $i <= variable_get('voipphone_block_number', '2'); $i++) {
      $blocks[$i]['info'] = 'VoIP Phone '. $i;
    }
    return $blocks;
  }
  elseif ($op == 'view') {
    $block = array(
      'subject' => 'VoIP Phone Block', 
      'content' => voipphone_block_content($delta),
    );
    return $block;
  }
}

function voipphone_block_content($delta) {
  $dial_number = variable_get('voiphone_block_number_'.$delta,'');
  if (!$dial_number) {
    //return t('You must set number to call.');
    //Get default Voip Drupal number
    $dial_number = variable_get('voipcall_cid_number','');
  }
  
  $button_text = variable_get('voiphone_block_text_'.$delta,'');
  
  $skin = variable_get('voiphone_block_skin_'.$delta,0);
  $id = "phone-block-$delta";
  
  $clients = module_invoke_all('voipphone_clients');
  $client = $clients[variable_get('voipphone_default_client', '')];

  return call_user_func($client['callback'], $skin, $id, $dial_number, $button_text);
}