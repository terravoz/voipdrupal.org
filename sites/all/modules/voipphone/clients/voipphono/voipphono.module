<?php 

/**
 * Implementation of hook_voipphone_clients().
 */
function voipphono_voipphone_clients() {
  $clients['Phono']=array(
		'name' => 'VoIP Phono',
        'config' => 'voip-client/phono',
        'callback' => 'voipphono_callback',
  );
  
  return $clients;
}

/**
 * Implementation of hook_menu().
 */
function voipphono_menu() {
  $items['voip-client/phono'] = array(
    'title' => 'VoIP Phono settings',
    'description' => 'VoIP Phono settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('voipphono_admin_settings_form'),
    'access arguments' => array('administer site configuration'),
    //'type' => MENU_NORMAL_ITEM,
  );
  
  return $items;
}

function voipphono_admin_settings_form(&$form_state) {
  $form['voipphono_api_key'] = array(
    '#type' => 'textfield',
    '#title' => t('Phono API Key'),
    '#description' => t("The Phono API Key provided in your Phono account."),
    '#default_value' => variable_get('voipphono_api_key', ''),
    '#required' => TRUE,
  );
  
   $form['voipphono_audio_type'] = array(
    '#type' => 'select',
    '#title' => t('Select Phono Widget type'),
    '#options' => array('auto' => 'auto', 'flash' => 'flash','java' => 'java'),
    '#description' => t("Choose which type of widget to use. More info at ").'<a href="http://blog.phono.com/2011/12/13/phonosdk-java-applet">Phono.com</a>',
    '#default_value' => variable_get('voipphono_audio_type', 'auto'),
  );
    
  return system_settings_form($form);
}

/**
 * Implementation of hook_theme().
 */
function voipphono_theme() {
  return array(
    'voipphono_nodialpad' => array(
      'arguments' => array('id' => '', 'number' => NULL, 'button_text' => NULL),
    ),
    'voipphono_withdialpad' => array(
      'arguments' => array('id' => '', 'number' => NULL, 'button_text' => NULL),
    ),
  );
}

function voipphono_callback($skin, $id, $dial_number, $button_text=NULL) {
  if($skin) {
    return theme('voipphono_withdialpad', $id, $dial_number, $button_text);
  }
  else {
    return theme('voipphono_nodialpad', $id, $dial_number, $button_text);
  }
}

function voipphono_add_js() {
  drupal_add_css(drupal_get_path('module', 'voipphone') .'/css/jquery-ui.css');
  drupal_add_js(array('voipphono_audio_type' => variable_get('voipphono_audio_type', 'auto')), 'setting');
  drupal_add_js(drupal_get_path('module', 'voipphone') .'/js/jquery-1.5.1.min.js');
  drupal_add_js(drupal_get_path('module', 'voipphono') .'/js/jquery.phono.js');
  drupal_add_js(drupal_get_path('module', 'voipphono') .'/js/jquery.callme.js');
  drupal_add_js(drupal_get_path('module', 'voipphone') .'/js/jquery-noconflict.js');  
}

function theme_voipphono_nodialpad($id, $number, $button_text=NULL) {
  if (!$button_text) {
    $button_text = $number;
  }
  $api_key = variable_get('voipphono_api_key', '');
  if(!$api_key) {
    return t('You must set Phono API key before you can start using this module.');
  }
  
  voipphono_add_js();
  $output = '<div id="phono-'.$id.'"></div>';   
  $output.= ' 
   <script type="text/javascript">
    jQuery15("#phono-'.$id.'")
    .css("width","210px")
    .callme({
      apiKey: "'.$api_key.'",
      numberToDial: "'.$number.'",
      buttonTextReady: "'.$button_text.'",
      slideOpen: false,
      dialPad: false,
      customheaders: { name:\'numbertodial\', value:\''.$number.'\'}
    })
    </script>
  ';
  return $output;
}

function theme_voipphono_withdialpad($id, $number, $button_text=NULL) {
  if (!$button_text) {
    $button_text = $number;
  }
  $api_key = variable_get('voipphono_api_key', '');
  if(!$api_key) {
    return t('You must set Phono API key before you can start using this module.');
  }
  
  voipphono_add_js();
  $output = '<div id="phono-'.$id.'"></div>';   
  $output.= ' 
   <script type="text/javascript">
    jQuery15("#phono-'.$id.'")
    .css("width","210px")
    .callme({
      apiKey: "'.$api_key.'",
      numberToDial: "'.$number.'",
      buttonTextReady: "'.$button_text.'",
      slideOpen: true,
      dialPad: true,
      customheaders: { name:\'numbertodial\', value:\''.$number.'\'}
    })
    </script>
  ';
  return $output;
}